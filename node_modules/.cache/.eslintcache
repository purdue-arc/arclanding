[{"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\index.js":"1","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\App.js":"2","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\index.js":"3","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\team\\team.jsx":"4","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\index.js":"5","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\header\\Header.jsx":"6","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\features\\Features.jsx":"7","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\footer\\Footer.jsx":"8","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\blog\\Blog.jsx":"9","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\whatGPT3\\WhatGPT3.jsx":"10","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\sponsors\\sponsors.jsx":"11","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\article\\Article.jsx":"12","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\cta\\CTA.jsx":"13","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\brand\\Brand.jsx":"14","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\navbar\\Navbar.jsx":"15","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\feature\\Feature.jsx":"16","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\blog\\imports.js":"17","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\brand\\import.js":"18"},{"size":269,"mtime":1704934828974,"results":"19","hashOfConfig":"20"},{"size":1117,"mtime":1704934828713,"results":"21","hashOfConfig":"20"},{"size":339,"mtime":1704934828965,"results":"22","hashOfConfig":"20"},{"size":2143,"mtime":1704934828969,"results":"23","hashOfConfig":"20"},{"size":264,"mtime":1704934828954,"results":"24","hashOfConfig":"20"},{"size":1945,"mtime":1704934828964,"results":"25","hashOfConfig":"20"},{"size":4384,"mtime":1704934908510,"results":"26","hashOfConfig":"20"},{"size":1435,"mtime":1704934828962,"results":"27","hashOfConfig":"20"},{"size":1645,"mtime":1704934828958,"results":"28","hashOfConfig":"20"},{"size":1570,"mtime":1704934828970,"results":"29","hashOfConfig":"20"},{"size":1049,"mtime":1704934828968,"results":"30","hashOfConfig":"20"},{"size":535,"mtime":1704934828946,"results":"31","hashOfConfig":"20"},{"size":454,"mtime":1704934828950,"results":"32","hashOfConfig":"20"},{"size":617,"mtime":1704934828948,"results":"33","hashOfConfig":"20"},{"size":1941,"mtime":1704934828956,"results":"34","hashOfConfig":"20"},{"size":438,"mtime":1704934828953,"results":"35","hashOfConfig":"20"},{"size":313,"mtime":1704934828959,"results":"36","hashOfConfig":"20"},{"size":325,"mtime":1704934828950,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16v2988",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\index.js",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\App.js",["97","98"],[],"import React from \"react\";\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\nimport \"./App.css\";\r\nimport {\r\n    Blog,\r\n    Features,\r\n    Header,\r\n    Possibility,\r\n    WhatGPT3,\r\n    Footer\r\n} from \"./containers\";\r\n\r\nimport {CTA, Brand, Navbar} from \"./components\";\r\nimport Team from \"./containers/team/team\";\r\n\r\nconst App = () => {\r\n    return (\r\n      <BrowserRouter>\r\n            <div className=\"App\">\r\n                <div className=\"gradient__bg\">\r\n                    <Navbar/>\r\n                    \r\n                </div>\r\n                <Routes>\r\n                    <Route path='/' element={ <Header/> }/>\r\n                    <Route path ='/about' element={ <WhatGPT3 />}/>\r\n                    <Route path='/projects' element = { <Features/> }/>\r\n                    <Route path='/sponsors' element= { <Possibility/> }/>\r\n                    <Route path='/blog' element={ <Blog/> }/>\r\n                    <Route path='/team' element={<Team/>} />\r\n                </Routes>\r\n\r\n                <Footer/>\r\n            </div>\r\n            </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\index.js",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\team\\team.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\index.js",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\header\\Header.jsx",["99","100","101"],[],"import React from \"react\";\r\nimport \"./header.css\";\r\nimport people from \"../../assets/people.png\";\r\nimport ai from \"../../assets/ai.png\";\r\nimport discord from \"../../assets/discord.png\"\r\nimport github from \"../../assets/github.png\"\r\nimport notion from \"../../assets/notion.png\"\r\nimport instagram from \"../../assets/instagram.png\"\r\nimport arcdemo from \"../../assets/arcDemo.mp4\"\r\nconst Header = () => {\r\n  return (\r\n      <div className=\"gpt3__header section__padding\" id=\"home\">\r\n        <div className=\"gpt3__header-content\">\r\n          <h1 className=\"gradient__text\">\r\n            Welcome to Purdue ARC\r\n          </h1>\r\n          <p>\r\n            Mission: We are building autonomous systems that advance the field of robotics. Our projects cover a wide range of disciplines and tackle problems at the forefront of research.\r\n          </p>\r\n          <p>\r\n            Links below:\r\n          </p>\r\n\r\n          <div className=\"gpt3__header-content__input\">\r\n            <a href=\"https://discord.gg/feyyGCA6QU\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <button type=\"button\">\r\n                <img src={discord} alt=\"Discord\" />\r\n              </button>\r\n            </a>\r\n\r\n\r\n            <a href=\"https://github.com/purdue-arc\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <button type=\"button\">\r\n                <img src={github} alt=\"Github\" />\r\n              </button>\r\n            </a>\r\n\r\n            <a href=\"https://www.instagram.com/purdue.arc/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <button type=\"button\">\r\n                <img src={instagram} alt=\"Notion\" />\r\n              </button>\r\n            </a>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"gpt3__header-image\">\r\n          <video src={arcdemo} alt=\"ARC Demo Video\" autoPlay muted loop controls={false} onContextMenu={(e) => e.preventDefault()} />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\nexport default Header;\r\n","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\features\\Features.jsx",["102","103","104","105","106","107"],[],"import React from \"react\";\r\nimport \"./features.css\";\r\nimport {Feature} from \"../../components\";\r\nconst featuresData = [\r\n    {\r\n        title: \"Drone Delivery\",\r\n        text:  <a>Our project focuses on developing an autonomous drone capable of delivering packages, revolutionizing last-mile delivery\r\n            applications. This drone will have an optimized flight control system to efficiently navigate urban environments, avoid all\r\n            potential obstacles (like buildings and trees), and plan long-term routes. We are also creating a mobile app that enables users\r\n            to easily interact with the drone and experience the convenience of drone delivery firsthand.</a>\r\n    },\r\n    {\r\n        title: \"Wizard Chess\",\r\n        text: <a>We're creating a large-scale, autonomous chess game inspired by the enchanting Wizard's Chess from Harry Potter. The\r\n            pieces will consist of individual robots, controlled using Raspberry Pi Picos and wifi chips, that all connect to a central\r\n            computer that controls all the pieces movements. On the software side, our goal is to bring chess to life by combining voice\r\n            recognition, path planning, computer vision, and swarm control to develop a unique, interactive player experience.</a>\r\n    },\r\n    {\r\n        title: \"Dog Copter\",\r\n        text: <a>We're building a groundbreaking fusion of a drone and a robotic dog, featuring autonomous navigation and camera/lidar vision.\r\n            Inspired by innovations in robotic dogs (Boston Dynamics' Spot), flying cars, and drones, our goal is to create a versatile robot\r\n            capable of seamless transitions, effortlessly traversing rocky land and taking flight in the air, primarily for exploration purposes.\r\n            Join us as we push the boundaries of robotics to create the marvel that is DogCopter.</a>\r\n    },\r\n    {\r\n        title: \"Piano Hand\",\r\n        text: <a>Inspired by groundbreaking biomechanical robots like Boston Dynamics' Atlas, our project aims to build a fully autonomous,\r\n            human-like hand capable of playing the piano, achieving the dexterity and complexity of the human hand's 27 degrees of freedom.\r\n            We are exploring the exciting realm of machine learning and optical image recognition to develop a model that can read sheet music,\r\n            delving in to different algorithms to make hand motion along the piano as real as possible, and controlling and running all this\r\n            with controllers channeled by PCBs.</a>\r\n    },\r\n    {\r\n        title: \"Rocket League\",\r\n        text: <a>We are building an autonomous system of small-scale vehicles to play exhilarating, high-speed soccer matches. Inspired by the\r\n            popular video game Rocket League, our goal is to create a dynamic and interactive demo, pitting human-controlled cars against autonomous\r\n            ones. As we progress, we envision launching a multi-university competition, inviting teams to showcase their own intelligent strategies\r\n            in a thrilling autonomous soccer tournament. Be a part of this cutting-edge initiative and help shape the future of autonomous sports!</a>\r\n    },\r\n\r\n    {\r\n        title: \"Sphero Swarm\",\r\n        text: <a>Our project revolves around the use of Sphero balls, compact spherical robots capable of precise movement and coordination, to form dynamic representations of molecules. By orchestrating the controlled movement of these Sphero robots, we will bring molecular structures to life, enabling visitors to gain a deeper understanding of chemistry in an engaging and interactive way.</a>\r\n    }\r\n\r\n];\r\nconst Features = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"gpt3__features-heading\">\r\n                <h1 className=\"gradient__text\">\r\n                    The future with Autonomous Robotics is now. Let's make it happen together. Learn more about our projects here!\r\n                </h1>\r\n            </div>\r\n            <div className=\"gpt3__features section__padding\" id=\"features\">\r\n                <div className=\"gpt3__features-container\">\r\n                    {featuresData.map((item, index) => (\r\n                        <Feature title={item.title} text={item.text} key={item.title + index} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Features;\r\n","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\footer\\Footer.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\blog\\Blog.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\whatGPT3\\WhatGPT3.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\sponsors\\sponsors.jsx",["108"],[],"import React from \"react\";\r\nimport \"./sponsors.css\"; // Make sure to link your CSS file\r\n{/* import sponsorImage1 from \"../../assets/sponsor1.png\"; // Import your sponsor images\r\nimport sponsorImage2 from \"../../assets/sponsor2.png\"; // Import your sponsor images */}\r\n// Import other sponsor images as needed\r\n\r\nconst Sponsors = () => {\r\n    const sponsorData = [\r\n        { name: \"Sponsor 1\", //image: sponsorImage1\r\n        },\r\n        { name: \"Sponsor 2\", //image: sponsorImage2\r\n        },\r\n        // Add more sponsors with their images here\r\n    ];\r\n\r\n    return (\r\n        <div className=\"sponsors__container\">\r\n            {sponsorData.map((sponsor, index) => (\r\n                <div className=\"sponsor\" key={index}>\r\n                    <div className=\"sponsor-image\">\r\n                        <img src={sponsor.image} alt={sponsor.name} />\r\n                    </div>\r\n                    <div className=\"sponsor-name\">{sponsor.name}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sponsors;\r\n","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\article\\Article.jsx",["109"],[],"import React from \"react\";\r\nimport \"./article.css\";\r\n\r\nconst Article = ({ imgUrl, date, title }) => {\r\n  return (\r\n    <div className=\"gpt3__blog-container_article\">\r\n      <div className=\"gpt3__blog-container_article-image\">\r\n        <img src={imgUrl} alt=\"blog-image\" />\r\n      </div>\r\n\r\n      <div className=\"gpt3__blog-container_article-content\">\r\n        <div>\r\n          <p> {date}</p>\r\n          <h3>{title}</h3>\r\n        </div>\r\n        <p> Read Full Article</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\cta\\CTA.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\brand\\Brand.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\navbar\\Navbar.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\feature\\Feature.jsx",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\containers\\blog\\imports.js",[],[],"C:\\Users\\bedga\\WebstormProjects\\arclanding\\src\\components\\brand\\import.js",[],[],{"ruleId":"110","severity":1,"message":"111","line":13,"column":9,"nodeType":"112","messageId":"113","endLine":13,"endColumn":12},{"ruleId":"110","severity":1,"message":"114","line":13,"column":14,"nodeType":"112","messageId":"113","endLine":13,"endColumn":19},{"ruleId":"110","severity":1,"message":"115","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"116","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":10},{"ruleId":"110","severity":1,"message":"117","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":7,"column":16,"nodeType":"120","endLine":7,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":14,"column":15,"nodeType":"120","endLine":14,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":21,"column":15,"nodeType":"120","endLine":21,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":28,"column":15,"nodeType":"120","endLine":28,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":36,"column":15,"nodeType":"120","endLine":36,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":44,"column":15,"nodeType":"120","endLine":44,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":3,"column":1,"nodeType":"123","messageId":"124","endLine":4,"endColumn":89},{"ruleId":"125","severity":1,"message":"126","line":8,"column":9,"nodeType":"120","endLine":8,"endColumn":46},"no-unused-vars","'CTA' is defined but never used.","Identifier","unusedVar","'Brand' is defined but never used.","'people' is defined but never used.","'ai' is defined but never used.","'notion' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]